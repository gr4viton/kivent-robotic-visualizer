#:kivy 1.9.0
#:import path os.path
#:import dirname os.path.dirname
#:import main __main__

TestGame:

<TestGame>:
    gameworld: gameworld
    app: app
    GameWorld:
        id: gameworld
        gamescreenmanager: gamescreenmanager
        size_of_gameworld: 100*1024
        zones: {'general': 20000, 'touch': 100}
        model_format_allocations: {'vertex_format_2f4ub': (150*1024, 150*1024),'vertex_format_4f': (150*1024, 150*1024) }

        PositionSystem2D:
            system_id: 'position'
            gameworld: gameworld
            zones: ['general', 'touch']

        RotateSystem2D:
            system_id: 'rotate'
            gameworld: gameworld
            zones: ['general']

        RotateRenderer:
            gameworld: gameworld
            zones: ['general']
            shader_source: path.join(dirname(dirname(path.abspath(main.__file__))), 'assets', 'glsl', 'positionrotateshader.glsl')

        PolyRenderer:
            id: 'poly_renderer'
            system_id: 'poly_renderer'
            gameworld: gameworld
            zones: ['general']
            frame_count: 2
            updateable: True
            shader_source:  'poscolorshader.glsl'

        RotatePolyRenderer:
            id: 'rotate_poly_renderer'
            system_id: 'rotate_poly_renderer'
            gameworld: gameworld
            zones: ['general']
            frame_count: 2
            updateable: True
            shader_source:  path.join(dirname(dirname(path.abspath(main.__file__))), 'assets', 'glsl', 'polyposcolorrotateshader.glsl')

        CymunkPhysics:
            gameworld: root.gameworld
            zones: ['general']

        CymunkTouchSystem:
            gameworld: root.gameworld
            zones: ['touch']
            zone_to_use: 'touch'
            physics_system: 'cymunk_physics'
            touch_radius: 30

    GameScreenManager:
        id: gamescreenmanager
        size: root.size
        pos: root.pos
        gameworld: gameworld

<GameScreenManager>:
    MainScreen:
        id: main_screen

<MainScreen@GameScreen>:
    name: 'main'
    FloatLayout:
        ControlPanel:
            cols:1
            size_hint: (.2, 1)
            pos_hint: {'x': 0.8, 'y': 0}

<ColoredGridLayout@GridLayout>:
    bg_color: .1, .1, .7, .3
#    margin: 3
    padding: 3, 3, 3, 3
    spacing: 2
    pos: root.pos
#    size: root.size
    size: root.size
#    size_hint: 1, 1
    canvas.before:
        Color:
            rgba: self.bg_color
            #rgba: .1, .6, .6, .5 if self.Color is None else self.Color
            #rgba: .1, .6, .6, .5 if self.bg_color is None else self.bg_color
        Rectangle:
            pos: self.pos
            size: self.size
#            pos: (self.pos[0] - self.margin, self.pos[1] - self.margin)
 #           size: (self.size[0] + 2 * self.margin, self.size[1] + 2 * self.margin)

<ControlPanel@ColoredGridLayout>:
 #   bg_color: .1, .1, .7, .5
    ScrollView: 
        min_move: 5
        do_scroll_x: 0
        StackLayout:
            
   #         Label:
    #            text: 'he'

#            DebugPanel       

            InfoPanel
        #    TitledPanel:
        #        Label:
        #            text: 'contents'

<ROTextInput@TextInput>:
    readonly: True
 #   size_hint: 1, 1 
 #   size_hint_y: 0.1

<InfoPanel@ColoredGridLayout>:
    cols: 1

    Button:
        text: 'Draw some stuff'
        on_release: app.root.draw_some_stuff()

    TitledText:
        title: 'Objects count'
        text: str(app.count)

    TitledText:
        title: 'Info'
        text: str(app.count)
 
    DebugPanel

#    TitledText
#    TitledText
#    TitledText
#    TitledText
#    TitledText
#    TitledText

<TitledText@ColoredGridLayout>:
    text: 'text'
    title: 'title'
    cols: 1
    Label:
        text: root.title
    ROTextInput:
        text: root.text
 

<DebugPanel>:
    Label:
        pos: root.pos
        size: root.size
        #font_size: root.size[1]*.5
        halign: 'center'
        valign: 'middle'
        color: (1,1,1,1)
        text: 'FPS: ' + root.fps if root.fps != None else 'FPS:'
